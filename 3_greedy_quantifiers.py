# Напишите регулярное выражение, которое найдёт все use strict; и use strict в тексте.

regex1 = r'use strict;?' or r'use strict[;]?'

# Абитуриент Александр пытается поступить в университет. Но вот незадача. В документах,
# описывающих процесс поступления, так много аббревиатур, что читать их становится невозможно.
# Он решил найти все аббревиатуры с помощью регулярных выражений и потом посмотреть
# их значения в интернете. Помогите Александру написать регулярное выражение,
# которое найдёт все аббревиатуры.
# Нужно найти последовательности, подходящие по следующим условиям:
# Состоит как минимум из 2-ух букв
# Используется латинский и кириллический алфавиты верхнего регистра

regex2 = r'[A-ZА-Я]{2,}' or r'[A-Z]{2,}|[А-Я]{2,}'  # Второй вариант - более корректный


# В России используются регистрационные знаки нескольких типов.
# Найдите все валидные знаки типа 1 и 1А, то есть вот такие:
# Нужно найти номерные знаки 1 и 1А, подходящие по следующим условиям:
# Левая часть:
# Используются арабские цифры и 12 букв кириллицы в нижнем регистре, имеющие
# графические аналоги в латинском алфавите: авекмнорстух
# Правая часть (регион):
# Регионом считаем любую последовательность арабских цифр длиной от 2 до 3 включительно
# Номера не могут быть подпоследовательностью, они должны быть отделены

regex3 = r'\b[авекмнорстух][0-9]{3}[авекмнорстух]{2}[0-9]{2,3}\b'
# или
s = 'авекмнорстух'
regex4 = fr'\b[{s}][0-9]{{3}}[{s}]{{2}}[0-9]{{2, 3}}\b'

# Напишите регулярное выражение, которое найдёт все IMEI в тексте.
# Нужно найти последовательности, подходящие по следующим условиям:
# Состоит из 15 арабских цифр
# Не является подпоследовательностью

regex5 = r'\b[0-9]{15}\b'


# Напишите регулярное выражение, которое найдёт все пары координат в тексте: широту и долготу.
# Нужно найти все пары координат, подходящие по следующим условиям:
# Координата:
# Может быть отрицательной или положительной
# В левой части может стоять от 1 до 3 арабских цифр включительно
# В правой части количество цифр неограничено
# Левая и правая части разделены точкой
# Координаты разделены пробелами
# Т.е. нужно написать регулярное выражение, которое будет искать 2 координаты, разделённые пробелом.

regex6 = r'\b-?[0-9]{1,3}[.][0-9]+ -?[0-9]{1,3}[.][0-9]+\b'

# или

coord = r'-?[0-9]{1,3}[.][0-9]+'

regex7 = rf'\b{coord} {coord}\b'


# Напишите регулярное выражение, которое найдёт все адреса ETH кошельков.
# Адрес ETH кошельков состоит из двух частей:
# Левая часть (префикс):
# 0x
# Правая часть (регион):
# Длина 40 символов
# Исползуются все символы шестнадцатеричной системы счисления в нижнем и верхнем регистрах

regex8 = r'0x[a-fA-F0-9]{40}'


# Напишите регулярное выражение, которое извлекает протокол полученной ссылки: http или https. Если протокола нет - ничего искать не надо.
# Протокол http или https, у которого есть граница справа

regex9 = r'\bhttps?\b'

# или

regex10 = r"\bhttps?(?=://)"  # LookBehind - скобочная конструкция, не выводится в результат,
                              # но проверяет наличие :// позади искомого. Более корректный вариант


# Напишите регулярное выражение, которое найдёт все числа, написанные с помощью римских цифр.
# Нужно найти последовательности, состоящие из римских цифр: IVXLCDM.

regex11 = r'\b[IVXLCDM]+\b'

# Составьте регулярное выражение, которое найдёт все смайлики в тексте.
# Смайлик состоит из трёх частей: глаз, носа (который может отсутствовать) и рта.
# В них используются следующие символы:
# Глаза: :8;¦=
# Нос: ^-
# Рот: |\0()/PODIC

regex12 = r'[:8;¦=][-^]?[|\\0()/PODIC]'


